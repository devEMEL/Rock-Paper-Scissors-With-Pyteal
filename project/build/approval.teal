#pragma version 6
txn ApplicationID
int 0
==
bnz main_l13
txn OnCompletion
int OptIn
==
bnz main_l12
txn OnCompletion
int NoOp
==
bnz main_l4
err
main_l4:
txna ApplicationArgs 0
byte "challenge"
==
bnz main_l11
txna ApplicationArgs 0
byte "accept"
==
bnz main_l10
txna ApplicationArgs 0
byte "reveal"
==
bnz main_l8
err
main_l8:
callsub reveal_8
main_l9:
int 0
return
main_l10:
callsub acceptchallenge_4
b main_l9
main_l11:
callsub createchallenge_3
b main_l9
main_l12:
int 0
callsub reset_0
int 1
return
main_l13:
int 1
return

// reset
reset_0:
store 0
load 0
byte "opponent"
byte ""
app_local_put
load 0
byte "wager"
int 0
app_local_put
load 0
byte "commitment"
byte ""
app_local_put
load 0
byte "reveal"
byte ""
app_local_put
retsub

// is_empty
isempty_1:
store 1
load 1
byte "opponent"
app_local_get
byte ""
==
load 1
byte "wager"
app_local_get
int 0
==
&&
load 1
byte "commitment"
app_local_get
byte ""
==
&&
load 1
byte "reveal"
app_local_get
byte ""
==
&&
retsub

// is_valid_play
isvalidplay_2:
store 2
load 2
extract 0 1
store 3
load 3
byte "r"
==
load 3
byte "p"
==
||
load 3
byte "s"
==
||
retsub

// create_challenge
createchallenge_3:
gtxn 0 RekeyTo
global ZeroAddress
==
gtxn 1 RekeyTo
global ZeroAddress
==
&&
assert
global GroupSize
int 2
==
txn GroupIndex
int 0
==
&&
gtxn 1 TypeEnum
int pay
==
&&
gtxn 1 Receiver
global CurrentApplicationAddress
==
&&
gtxn 1 CloseRemainderTo
global ZeroAddress
==
&&
int 1
int 0
app_opted_in
&&
int 0
callsub isempty_1
&&
int 1
callsub isempty_1
&&
txn NumAppArgs
int 2
==
&&
assert
txn Sender
byte "opponent"
txna Accounts 1
app_local_put
txn Sender
byte "wager"
gtxn 1 Amount
app_local_put
txn Sender
byte "commitment"
txna ApplicationArgs 1
app_local_put
int 1
return

// accept_challenge
acceptchallenge_4:
gtxn 0 RekeyTo
global ZeroAddress
==
gtxn 1 RekeyTo
global ZeroAddress
==
&&
assert
global GroupSize
int 2
==
txn GroupIndex
int 0
==
&&
gtxn 1 TypeEnum
int pay
==
&&
gtxn 1 Receiver
global CurrentApplicationAddress
==
&&
gtxn 1 CloseRemainderTo
global ZeroAddress
==
&&
gtxn 1 Amount
txna Accounts 1
byte "wager"
app_local_get
==
&&
int 1
int 0
app_opted_in
&&
txna Accounts 1
byte "opponent"
app_local_get
txn Sender
==
&&
txn NumAppArgs
int 2
==
&&
txna ApplicationArgs 1
callsub isvalidplay_2
&&
assert
txn Sender
byte "opponent"
txna Accounts 1
app_local_put
txn Sender
byte "wager"
gtxn 1 Amount
app_local_put
txn Sender
byte "reveal"
txna ApplicationArgs 1
app_local_put
int 1
return

// play_value
playvalue_5:
store 6
load 6
extract 0 1
store 7
load 7
byte "r"
==
bnz playvalue_5_l6
load 7
byte "p"
==
bnz playvalue_5_l5
load 7
byte "s"
==
bnz playvalue_5_l4
err
playvalue_5_l4:
int 2
b playvalue_5_l7
playvalue_5_l5:
int 1
b playvalue_5_l7
playvalue_5_l6:
int 0
playvalue_5_l7:
retsub

// winner_account_index
winneraccountindex_6:
store 9
store 8
load 8
load 9
==
bnz winneraccountindex_6_l6
load 8
int 1
+
int 3
%
load 9
==
bnz winneraccountindex_6_l5
load 9
int 1
+
int 3
%
load 8
==
bnz winneraccountindex_6_l4
err
winneraccountindex_6_l4:
int 0
b winneraccountindex_6_l7
winneraccountindex_6_l5:
int 1
b winneraccountindex_6_l7
winneraccountindex_6_l6:
int 2
winneraccountindex_6_l7:
retsub

// send_reward
sendreward_7:
store 11
store 10
itxn_begin
int pay
itxn_field TypeEnum
load 10
txnas Accounts
itxn_field Receiver
load 11
itxn_field Amount
int 0
itxn_field Fee
itxn_submit
retsub

// reveal
reveal_8:
gtxn 0 RekeyTo
global ZeroAddress
==
assert
global GroupSize
int 1
==
txn GroupIndex
int 0
==
&&
int 0
byte "opponent"
app_local_get
txna Accounts 1
==
&&
int 1
byte "opponent"
app_local_get
txn Sender
==
&&
int 0
byte "wager"
app_local_get
int 1
byte "wager"
app_local_get
==
&&
int 0
byte "commitment"
app_local_get
byte ""
!=
&&
int 1
byte "reveal"
app_local_get
byte ""
!=
&&
txn NumAppArgs
int 2
==
&&
assert
int 0
byte "wager"
app_local_get
store 5
txna ApplicationArgs 1
callsub playvalue_5
int 1
byte "reveal"
app_local_get
callsub playvalue_5
callsub winneraccountindex_6
store 4
load 4
int 2
==
bnz reveal_8_l2
txn Fee
global MinTxnFee
int 2
*
>=
assert
load 4
load 5
int 2
*
callsub sendreward_7
b reveal_8_l3
reveal_8_l2:
txn Fee
global MinTxnFee
int 3
*
>=
assert
int 0
load 5
callsub sendreward_7
int 1
load 5
callsub sendreward_7
reveal_8_l3:
int 0
callsub reset_0
int 1
callsub reset_0
int 1
return